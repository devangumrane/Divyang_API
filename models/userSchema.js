import mongoose from "mongoose";

const userSchema = new mongoose.Schema({
  docId: { type: Number },
  applicantAadhar: { type: String, required: true, unique: true },
  applicantId: { type: Number },
  photo_link: { type: String },
  uuid_link: { type: String },
  aadharFront_link: { type: String },
  aadharBack_link: { type: String },
  firstName: { type: String },
  middleName: { type: String },
  lastName: { type: String },
  udid: { type: String },
  address: { type: String },
  dob: { type: String },
  city: { type: String },
  zipCode: { type: String },
  createdDate: { type: String },
  avakNo: { type: String },
  userId: { type: String },
  username: { type: String },
  handicapType: {
    type: String,
    enum: [
      "BLINDNESS",
      "LOW_VISION",
      "HEARING_IMPAIRMENT",
      "SPEECH_AND_LANGUAGE_DISABILITY",
      "LOCOMOTOR_DISABILITY",
      "MENTAL_ILLNESS",
      "LEARNING_DISABILITY",
      "CEREBRAL_PALSY",
      "AUTISM",
      "MULTIPLE_DISABILITY",
      "LEPROSY_CURED_PERSONS",
      "DWARFISM",
      "INTELLECTUAL_DISABILITY",
      "MUSCULAR_DISABILITY",
      "CHRONIC_NEUROLOGICAL_CONDITIONS",
      "MULTIPLE_SCLEROSIS",
      "THALASSEMIA",
      "HEMOPHILIA",
      "SICKLE_CELL_DISEASE",
      "ACID_ATTACK_VICTIM",
      "PARKINSONS_DISEASE",
    ],
  },
  email: { type: String },
  mobile: { type: String },
  lat: { type: String },
  long: { type: String },
  parentName: { type: String },
  parentDob: { type: String },
  parentAddress: { type: String },
  parentAge: { type: Number },
  parentAadhar: { type: String },
  parentMobile: { type: String },
  isActive: { type: Boolean },
  wardId: { type: Number },
  biometricId: { type: Number },
  face_link: { type: String },
  fingerprint_link: { type: String },
  iris_link: { type: String },
  role: { type: String, enum: ["user", "admin"], default: "user" },
}, { timestamps: true });

const User = mongoose.model("User", userSchema);
export default User;